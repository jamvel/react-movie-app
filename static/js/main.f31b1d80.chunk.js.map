{"version":3,"sources":["stores/movies/types.js","api/search-movies.js","api/get-configuration.js","api/get-genres.js","api/get-popular.js","api/get-now-playing.js","api/get-top-rated.js","api/get-movie-details.js","api/get-from-genre.js","helpers/theme.js","components/Error/index.js","components/Loader/index.js","helpers/fontAwesomeLibrary.js","stores/ui/actions.js","stores/ui/types.js","components/SearchResult/index.js","components/Search/index.js","components/Header/index.js","helpers/routeMap.js","components/Menu/index.js","components/GenreList/index.js","components/Suspend/index.js","components/App/index.js","stores/config/actions.js","stores/config/types.js","stores/config/reducer.js","stores/movies/reducer.js","stores/ui/reducer.js","stores/index.js","serviceWorker.js","index.js"],"names":["SET_MOVIE","SET_MOVIES","SET_LIST","INIT_FETCH_LIST","ERROR_FETCH_LIST","tokenSource","a","axios","get","data","defaultParams","pageIndex","region","process","language","params","page","appendToResponse","id","Error","append_to_response","query","cancel","CancelToken","source","cancelToken","token","isCancel","cancelPrevQuery","genre","with_genres","primary","secondary","breakpoints","xs","sm","md","lg","ErrorWrapper","styled","div","theme","text","LoaderWrapper","Loader","props","library","add","faFilm","faSearch","faTimes","faBars","faClock","faStar","toggleSearch","value","dispatch","type","payload","toggleMenu","ResultParent","PosterImagePlaceHolder","ResultInfoParent","ResultTitle","ResultDesc","connect","state","imagesConfig","showSearch","ui","secureBaseUrl","posterSize","toggleSearchRx","toggle","movie","history","useHistory","onClick","push","poster_path","src","alt","icon","color","title","Date","release_date","getFullYear","overview","Parent","InputParent","Input","input","Results","Search","useState","searchValue","setSearchValue","setSearchQuery","searchData","setSearchData","isError","setIsError","getSearchData","length","searchMovies","size","autoFocus","onChange","e","target","search","debounce","prevSearch","results","map","key","HeaderParent","BrandWrapper","HeaderWrapper","IconWrapper","openMenuRx","route","MenuWrapper","nav","open","HeaderElement","MenuElement","genresRoutes","g","name","items","routeMap","concat","showMenu","closeMenuRx","item","GenreListWrapper","Genre","genres","Suspend","Component","fallback","PopularMovies","React","lazy","TopRatedMovies","NowPlayingMovies","MoviesByGenre","Movie","GlobalStyle","createGlobalStyle","initConfigRx","getConfiguration","config","getGenres","location","useEffect","exact","path","component","render","match","action","isLoading","initialState","lists","movies","forEach","console","log","listObject","index","list","makeStore","createStore","combineReducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","Boolean","hostname","defaults","baseURL","REACT_APP_TMDB_API_KEY","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f31b1d80.chunk.js","sourcesContent":["export const SET_MOVIE = 'SET_MOVIE';\nexport const SET_MOVIES = 'SET_MOVIES';\nexport const SET_LIST = 'SET_LIST'\nexport const INIT_FETCH_LIST = 'INIT_FETCH_LIST';\nexport const ERROR_FETCH_LIST = 'ERROR_FETCH_LIST';","import axios from 'axios';\n\nlet tokenSource;\nexport default async query => {\n    try {\n        if (typeof tokenSource !== typeof undefined) {\n            tokenSource.cancel('Operation canceled due to new request.');\n        }\n        // save the new request for cancellation\n        tokenSource = axios.CancelToken.source();\n    \n        const { data } = await axios.get('/search/movie', {\n            params: {\n                query\n            },\n            cancelToken: tokenSource.token\n        });\n    \n        return { data };\n    } catch (e) {\n        if (axios.isCancel(e)){\n            return { \n                cancelPrevQuery: true \n            };\n        }\n        throw e;\n    }\n}","import axios from 'axios';\n\nexport default async () => {\n    try {\n        const { data } = await axios.get('/configuration')\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","import axios from 'axios';\n\nexport default async () => {\n    try {\n        const { data } = await axios.get('/genre/movie/list')\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","import axios from 'axios';\n\nconst defaultRegion = process.env.REACT_APP_TMDB_DEFAULT_REGION || 'US';\nconst defaultLanguage = process.env.REACT_APP_TMDB_DEFAULT_LANGUAGE || 'en-US';\n\nconst defaultParams = {\n    pageIndex: 1,\n    region: defaultRegion,\n    language: defaultLanguage\n}\n\nexport default async ({ pageIndex, region, language } = defaultParams) => {\n    try {\n        const { data } = await axios.get('/movie/popular', {\n            params: {\n                page: pageIndex,\n                region,\n                language\n            }\n        })\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","import axios from 'axios';\n\nconst defaultRegion = process.env.REACT_APP_TMDB_DEFAULT_REGION || 'US';\nconst defaultLanguage = process.env.REACT_APP_TMDB_DEFAULT_LANGUAGE || 'en-US';\n\nconst defaultParams = {\n    pageIndex: 1,\n    region: defaultRegion,\n    language: defaultLanguage\n}\n\nexport default async ({ pageIndex, region, language } = defaultParams) => {\n    try {\n        const { data } = await axios.get('/movie/now_playing', {\n            params: {\n                page: pageIndex,\n                region,\n                language\n            }\n        })\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","import axios from 'axios';\n\nconst defaultRegion = process.env.REACT_APP_TMDB_DEFAULT_REGION || 'US';\nconst defaultLanguage = process.env.REACT_APP_TMDB_DEFAULT_LANGUAGE || 'en-US';\n\nconst defaultParams = {\n    pageIndex: 1,\n    region: defaultRegion,\n    language: defaultLanguage\n}\n\nexport default async ({ pageIndex, region, language } = defaultParams) => {\n    try {\n        const { data } = await axios.get('/movie/top_rated', {\n            params: {\n                page: pageIndex,\n                region,\n                language\n            }\n        })\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","import axios from 'axios';\n\nconst defaultParams = {\n    appendToResponse: 'videos,similar'\n}\n\nexport default async (id, { appendToResponse } = defaultParams) => {\n    try {\n        if(!id){\n            throw new Error('Movie ID cannot be undefined')\n        }\n        const { data } = await axios.get(`/movie/${id}`, {\n            params: {\n                append_to_response: appendToResponse\n            }\n        })\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","import axios from 'axios';\n\nconst defaultRegion = process.env.REACT_APP_TMDB_DEFAULT_REGION || 'US';\nconst defaultLanguage = process.env.REACT_APP_TMDB_DEFAULT_LANGUAGE || 'en-US';\n\nconst defaultParams = {\n    pageIndex: 1,\n    region: defaultRegion,\n    language: defaultLanguage\n}\n\nexport default async ({ genre, pageIndex, region, language } = defaultParams) => {\n    try {\n        const { data } = await axios.get('/discover/movie', {\n            params: {\n                page: pageIndex,\n                region,\n                language,\n                with_genres: genre\n            }\n        })\n        return data;\n    }catch(e){\n        throw (e)\n    }\n}","export default {\n    primary: '#2c3949',\n    secondary: '#fff',\n    breakpoints: {\n        xs: '576px',\n        sm: '768px',\n        md: '992px',\n        lg: '1140px'\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst ErrorWrapper = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: ${({ theme }) => theme.secondary};\n    font-size: 1.5em;\n`\n/**\n * Error Component\n * @name Error\n * @component\n * @param {string} text \n */\nconst Error = ({ text }) => (\n    <ErrorWrapper>\n        {text}\n    </ErrorWrapper>\n)\n\nexport default Error;","import React from 'react';\nimport styled from 'styled-components';\nimport { Ellipsis } from 'react-awesome-spinners';\n\nconst LoaderWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n`\n/**\n * Loader Component\n * @name Loader\n * @component\n * @param {...Object} props \n */\nconst Loader = ({ ...props }) => (\n    <LoaderWrapper>\n        <Ellipsis\n            {...props}\n        />\n    </LoaderWrapper>\n)\n\nexport default Loader;","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFilm, faSearch, faTimes, faBars, faClock, faStar } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faFilm)\nlibrary.add(faSearch);\nlibrary.add(faTimes);\nlibrary.add(faBars);\nlibrary.add(faClock);\nlibrary.add(faStar);","import { TOGGLE_SEARCH, TOGGLE_MENU } from './types';\n\nexport const toggleSearch = (value = null) => dispatch => {\n    dispatch({\n        type: TOGGLE_SEARCH,\n        payload: value,\n    })\n};\n\nexport const toggleMenu = (value = null) => dispatch => {\n    dispatch({\n        type: TOGGLE_MENU,\n        payload: value,\n    })\n};","export const TOGGLE_SEARCH = 'TOGGLE_SEARCH';\nexport const TOGGLE_MENU = 'TOGGLE_MENU';","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useHistory } from \"react-router-dom\";\nimport get from 'lodash.get';\n\nimport { toggleSearch } from 'stores/ui/actions'\n\nconst ResultParent = styled.div`\n    display: flex;\n    flex-direction: row;\n    max-height: 68px;\n    border-bottom: 1px solid lightgrey;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n\n    :hover {\n        transform: scale(1.008);\n        z-index: 2;\n    }\n`\n\nconst PosterImagePlaceHolder = styled.div`\n    width: 45px;\n    height: 68px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.primary};\n\n    > img {\n        width: 45px;\n        height: 68px;\n    }\n`\n\nconst ResultInfoParent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    width: calc(100% - 50px);\n    overflow: hidden;\n    padding: 0 5px;\n`\nconst ResultTitle = styled.div`\n    font-weight: bold;\n`\n\nconst ResultDesc = styled.div`\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 12px;\n`\n/**\n * Component that displays a single search result\n * @name Result\n * @component\n * @param {Object} movie - The movie object containing the data\n * @param {string} secureBaseUrl - URL to fetch the asset from\n * @param {string} posterSize - Size of poster image \n * @param {Function} toggleSearchRx - Function that dispatches an action to toggle the Search bar \n */\nconst Result = ({ movie, secureBaseUrl, posterSize, toggleSearchRx }) => {\n    const history = useHistory();\n    return (\n        <ResultParent \n            onClick={() => {\n                toggleSearchRx(false)\n                history.push(`/movie/${movie.id}`)\n            }}\n        >\n            <PosterImagePlaceHolder>\n                {movie.poster_path ? (\n                    <img src={`${secureBaseUrl}${posterSize}/${movie.poster_path}`} alt=\"Poster\" />\n                ) : (\n                    <FontAwesomeIcon icon=\"film\" color='white' />\n                )}\n            </PosterImagePlaceHolder>\n            <ResultInfoParent>\n                <ResultTitle>{movie.title} ({new Date(movie.release_date).getFullYear()})</ResultTitle>\n                <ResultDesc>\n                    {movie.overview}\n                </ResultDesc>\n            </ResultInfoParent>\n        </ResultParent>\n    )\n}\n\nconst mapStateToProps = state => {\n    const imagesConfig = get(state, 'config.images');\n    return {\n        showSearch: state.ui.showSearch,\n        secureBaseUrl: get(imagesConfig, 'secure_base_url'),\n        posterSize: get(imagesConfig, 'logo_sizes[3]')\n    }\n}\n  \nconst mapDispatchToProps = dispatch => ({\n    toggleSearchRx: toggle => dispatch(toggleSearch(toggle))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","import React, { useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Result from 'components/SearchResult';\nimport { searchMovies } from 'api';\n\nconst Parent = styled.div`\n    width: 100%;\n    position: absolute;\n    height: auto;\n    box-sizing: border-box;\n    background: white;\n    z-index: 3;\n    overflow-x: hidden;\n`\n\nconst InputParent = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 5px 15px;\n    border-bottom: 1px solid ${props => props.theme.primary};\n`\n\nconst Input = styled.input`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    font-size: 16px;\n    font-family: inherit;\n    padding: 0 10px;\n    border: none;\n\n    :focus {\n        outline: none;\n    }\n`\n\nconst Results = styled.div`\n    height: auto;\n    color: black;\n    font-size: 14px;\n    font-family: inherit;\n    max-height: 80vh;\n    overflow: scroll;\n`\n\nconst Error = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1em;\n`\n\n/**\n * Search component - Self sufficient without redux state connection\n * @name Search\n * @component\n */\nconst Search = () => {\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [searchQuery, setSearchQuery] = useState({}); // eslint-disable-line no-unused-vars\n    const [searchData, setSearchData] = useState({});\n    const [isError, setIsError] = useState(false);\n\n    const handleChange = e => {\n        const { value } = e.target;\n        setSearchValue(value);\n\n        // debounce so that we don't run too many queries\n        const search = debounce(getSearchData, 500);\n\n        setSearchQuery(prevSearch => {\n            if (prevSearch.cancel) {\n              prevSearch.cancel();\n            }\n            return search;\n        });\n\n        search(value);\n    }\n\n    const getSearchData = async value => {\n        try {\n            if(value.length > 1){\n                const { cancelPrevQuery, data } = await searchMovies(value);\n        \n                if (cancelPrevQuery){\n                    return;\n                }\n        \n                setSearchData(data)\n                if(isError){\n                    setIsError(false)\n                }\n            }\n        }catch(e){\n            setIsError(true)\n        }\n    }\n\n    return (\n        <Parent>\n            <InputParent>\n                <FontAwesomeIcon icon=\"search\" color='grey' size='xs' />\n                <Input\n                    autoFocus\n                    value={searchValue}\n                    onChange={handleChange}\n                />\n            </InputParent>\n            <Results>\n                {'results' in searchData && searchData.results.map(movie => (\n                    <Result key={movie.id} movie={movie} />\n                ))}\n                {isError && (\n                    <Error>Something went wrong whilst searching</Error>\n                )}\n            </Results>\n        </ Parent>\n)}\n\nexport default Search;","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useHistory } from 'react-router-dom';\n\nimport { toggleSearch, toggleMenu } from 'stores/ui/actions'\n\nimport Search from 'components/Search';\n\nconst HeaderParent = styled.div`\n    width: 100%;\n    height: 50px;\n    color: white;\n    font-size: 1.5em;\n    padding-top: .3em;\n`\n\nconst BrandWrapper = styled.div`\n    margin-left: 1em;\n    user-select: none;\n    cursor: pointer;\n`\n\nconst HeaderWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    > svg {\n        font-size: 20px;\n        cursor: pointer;\n    }\n`\n\nconst IconWrapper = styled.div`\n    svg {\n        margin-left: 0.7em;\n        cursor: pointer;\n\n        :last-child {\n            margin-right: 1em;\n        }\n    }\n`\n\n/**\n * @component\n * @param {bool} showSearch - Determines whether or not SearchBar is shown\n * @param {Function} toggleSearchRx - Function that dispatches an an action to toggle the SearchBar\n * @param {Function} openMenuRx - Function that dispatched an action to open the side menu\n */\nconst Header = ({ showSearch, toggleSearchRx, openMenuRx }) => {\n    const history = useHistory();\n    return (\n        <HeaderParent>\n            <HeaderWrapper>\n                <BrandWrapper onClick={() => history.push('/')}>\n                    <FontAwesomeIcon icon=\"film\" /> React <span>Movies</span>\n                </BrandWrapper>\n                <IconWrapper>\n                    <FontAwesomeIcon \n                        icon={showSearch ? 'times' : 'search'}\n                        onClick={() => toggleSearchRx()}\n                    />\n                    <FontAwesomeIcon \n                        icon='bars'\n                        onClick={() => openMenuRx()}\n                    />\n                </IconWrapper>\n            </HeaderWrapper>\n            {showSearch && (\n                <Search />\n            )}\n        </HeaderParent>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        showSearch: state.ui.showSearch\n    }\n}\n  \nconst mapDispatchToProps = dispatch => ({\n    toggleSearchRx: (toggle = null) => dispatch(toggleSearch(toggle)),\n    openMenuRx: () => dispatch(toggleMenu(true))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","export default [\n    { title: 'Popular Movies', route: '/' },\n    { title: 'Top Rated Movies', route: '/top' },\n    { title: 'Now Playing', route: '/now-playing' }\n]","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useHistory } from 'react-router-dom';\nimport { toggleMenu } from 'stores/ui/actions';\n\nimport routeMap from 'helpers/routeMap';\n\nconst MenuWrapper = styled.nav`\n    position: fixed;\n    top: 0;\n    right: 0;\n    display: flex;\n    flex-direction: column;\n    background: #1f262d;\n    width: 350px;\n    color: ${({ theme }) => theme.secondary};\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    height: 100%;\n    text-align: left;\n    transition: transform 0.4s ease-in-out;\n    z-index: 99;\n    overflow-y: scroll;\n    @media (max-width: ${({ theme }) => theme.breakpoints.xs}) {\n        width: 100%;\n    }\n`;\n\nconst HeaderElement = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 1.4em;\n    padding: .8em;\n\n    span {\n        margin-left: 5px;\n    }\n\n    > svg {\n        font-size: 1.1em;\n        cursor: pointer;\n\n        :hover {\n            transition: all .4s ease;\n            transform: scale(1.1);\n        }\n    }\n`\n\nconst MenuElement = styled.div`\n    font-size: .95em;\n    border-color: blue;\n    border-top: 1px solid;\n    border-bottom: 1px solid;\n    padding: 1em;\n    \n    :hover {\n        cursor: pointer;\n    }\n`\n\n/**\n * @name Menu\n * @component\n * @param {boolean} showMenu - Determines whether the Menu is shown or not\n * @param {Object} items - Items to be rendered in the Menu\n * @param {Function} closeMenuRx - Function that dispatches an action to close the Menu\n */\nconst Menu = ({ showMenu, items, closeMenuRx }) => {\n    const history = useHistory();\n\n    const handleElementClick = route => {\n        if(route){\n            closeMenuRx(false);\n            history.push(route)\n        }\n    }\n\n    return (\n        <MenuWrapper \n            open={showMenu}\n        >\n            <HeaderElement>\n                <span>\n                    <FontAwesomeIcon icon=\"film\" />\n                    <span>React Movies</span>\n                </span>\n                <FontAwesomeIcon\n                    onClick={() => closeMenuRx()}\n                    icon=\"times\" \n                />\n            </HeaderElement>\n            {items.map(item => (\n                <MenuElement\n                    onClick={() => handleElementClick(item.route)}\n                    key={item.route}\n                >\n                    {item.title}\n                </MenuElement>\n            ))}\n        </MenuWrapper>\n    )\n}\n\nconst mapStateToProps = state => {\n    const genres = get(state, 'config.genres') || []\n    const genresRoutes = genres.map(g => {\n        return {\n            title: `Genre: ${g.name}`,\n            route: `/genre/${g.id}`\n        }\n    }) \n    \n    return {\n        items: routeMap.concat(genresRoutes),\n        showMenu: get(state, 'ui.showMenu')\n    }\n}\n  \nconst mapDispatchToProps = dispatch => ({\n    closeMenuRx: () => dispatch(toggleMenu(false))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React from 'react';\nimport { connect } from 'react-redux';\nimport get from 'lodash.get';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst GenreListWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    background: transparent;\n    overflow-x: overlay;\n    padding: 1em 0;\n    :hover {\n        cursor: url(${process.env.PUBLIC_URL}/scroll.png) 32 15, auto;\n    }\t\n`\n\nconst Genre = styled.div`\n    background: transparent;\n    color: ${({ theme }) => theme.secondary};\n    border: 1px solid ${({ theme }) => theme.secondary};\n    border-radius: 1em;\n    display: flex;\n    align-items: center;\n    flex-basis: 200px;\n    flex-grow: 0;\n    flex-shrink: 0;\n    justify-content: center;\n    margin: 0 1em;\n    padding: .5em 0;\n\n    :hover {\n        background: maroon;\n    }\n`\n/**\n * Displays a list of genres\n * @name GenreList\n * @component\n * @param {Object[]} genres \n */\nconst GenreList = ({ genres }) => {\n    const history = useHistory();\n    const handleClick = id => {\n        history.push(`/genre/${id}`)\n    }\n    return (\n        <>\n            {genres.length > 0 && (\n                <GenreListWrapper>\n                    {genres.map(genre => (\n                        <Genre\n                            key={genre.id}\n                            onClick={() => handleClick(genre.id)}\n                        >\n                            {genre.name}\n                        </Genre>\n                    ))}\n                </GenreListWrapper>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        genres: get(state, 'config.genres') || []\n    }\n}\n\nexport default connect(mapStateToProps, null)(GenreList);","import React, { Suspense } from 'react';\nimport theme from 'helpers/theme';\nimport Loader from 'components/Loader'\n\n/**\n * Component that wraps a React.Suspend around a given Component\n * @name Suspend\n * @component\n * @param {ReactElement} Component \n */\n\nconst Suspend = Component => {\n    return props => (\n        <Suspense fallback={<Loader color={theme.secondary} />}>\n            <Component {...props} />\n        </Suspense>\n    );\n}\n\nexport default Suspend;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { initConfig } from 'stores/config/actions';\n\nimport 'helpers/fontAwesomeLibrary';\nimport theme from 'helpers/theme';\n\nimport Header from 'components/Header';\nimport Menu from 'components/Menu';\nimport GenreList from 'components/GenreList'\nimport Error from 'components/Error';\nimport Suspend from 'components/Suspend';\n\nconst PopularMovies = React.lazy(() => import('routes/PopularMovies'));\nconst TopRatedMovies = React.lazy(() => import('routes/TopRatedMovies'));\nconst NowPlayingMovies = React.lazy(() => import('routes/NowPlayingMovies'));\nconst MoviesByGenre = React.lazy(() => import('routes/MoviesByGenre'));\nconst Movie = React.lazy(() => import('routes/Movie'));\n\n\nconst GlobalStyle = createGlobalStyle`\n    html, body, #root {\n        height: 100%;\n    }\n    body {\n        background-color: #2c3949;\n        font-family: 'Poppins';\n        margin: 0;\n        overflow-x: hidden;\n    }\n`\n\nconst App = ({ location, initConfigRx }) => {\n\n    useEffect(() => {\n        // Dispatch action to get config from API\n        initConfigRx();\n    }, [initConfigRx])\n\n    return (\n        <>\n            <GlobalStyle />\n            <ThemeProvider theme={theme}>\n                <Header />\n                <Menu />\n                <Switch location={location}>\n                    <Route exact={true} path=\"/\" component={Suspend(PopularMovies)} />\n                    <Route exact={true} path=\"/top\" component={Suspend(TopRatedMovies)}/>\n                    <Route exact={true} path=\"/now-playing\" component={Suspend(NowPlayingMovies)} />\n                    <Route\n                            path=\"/genre/:id\"\n                            render={Suspend(props => (\n                                <>\n                                    <GenreList />\n                                    <MoviesByGenre id={props.match.params.id} />\n                                </>\n                            ))}\n                        />\n                    <Route\n                        path=\"/movie/:id\"\n                        render={Suspend(props => (\n                            <Movie id={props.match.params.id} />\n                        ))}\n                    />\n                    <Route render={Suspend(() => (<Error text={'Page not found'} />))} />\n                </Switch>\n            </ThemeProvider>\n        </>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    initConfigRx: () => dispatch(initConfig()),\n})\n\n\nexport default connect(null, mapDispatchToProps)(App)","import { SET_CONFIG, ERROR_SET_CONFIG, INIT_SET_CONFIG } from './types';\nimport { getConfiguration, getGenres } from 'api';\n\nexport const initConfig = () => async dispatch => {\n    try {\n        dispatch({ type: INIT_SET_CONFIG })\n\n        const config = await getConfiguration()\n        const genres = await getGenres()\n    \n        dispatch({\n            type: SET_CONFIG,\n            payload: {\n                ...config,\n                ...genres\n            },\n        })\n    } catch(e){\n        dispatch({\n            type: ERROR_SET_CONFIG\n        })\n    }\n};","export const SET_CONFIG = 'SET_CONFIG';\nexport const INIT_SET_CONFIG = 'INIT_SET_CONFIG';\nexport const ERROR_SET_CONFIG = 'ERROR_SET_CONFIG';","import { INIT_SET_CONFIG, SET_CONFIG, ERROR_SET_CONFIG } from './types';\n\nconst initialState = null;\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case INIT_SET_CONFIG: {\n            return {\n                isLoading: true\n            }\n        }\n        case SET_CONFIG: {\n            return {\n                isLoading: false,\n                ...action.payload\n            }\n        }\n        case ERROR_SET_CONFIG: {\n            return null;\n        }\n        default:\n            return state;\n    }\n};","import get from 'lodash.get';\nimport { SET_MOVIE, SET_MOVIES, SET_LIST, ERROR_FETCH_LIST, INIT_FETCH_LIST } from './types';\n\nconst initialState = {\n    lists: {},\n    data: {}\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_MOVIE: {\n            return {\n                ...state,\n                [action.payload.id]: {\n                    ...action.payload\n                }\n            }\n        }\n        case SET_MOVIES: {\n            const movies = {}\n            action.payload.movies.forEach(movie => {\n                // do not overwrite any movies already in state\n                if(!(movie.id in state.data)){\n                    movies[movie.id] = { ...movie };\n                }else{\n                    console.log(`Movie ID: ${movie.id} already in state... Skipping`)\n                }\n            });\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    ...movies\n                }\n            }\n        }\n        case INIT_FETCH_LIST: {\n            const id = action.payload.id\n            const listObject = get(state.lists, id);\n\n            return {\n                ...state,\n                lists: {\n                    ...state.lists,\n                    [action.payload.id]: {\n                        ...listObject,\n                        isLoading: true,\n                        isError: false,\n                    }\n                }\n            }\n        }\n        case ERROR_FETCH_LIST: {\n            const id = action.payload.id\n            const listObject = get(state.lists, id);\n\n            return {\n                ...state,\n                lists: {\n                    ...state.lists,\n                    [action.payload.id]: {\n                        ...listObject,\n                        isLoading: false,\n                        isError: true,\n                        index: action.payload.index,\n                    }\n                }\n            }\n        }\n        case SET_LIST: {\n            const id = action.payload.id;\n            let list = get(get(state.lists, id), 'list') // list inside list object\n\n            return {\n                ...state,\n                lists: {\n                    ...state.lists,\n                    [action.payload.id]:{\n                        isLoading: false,\n                        isError: false,\n                        index: action.payload.index,\n                        list: list ? list.concat(action.payload.list) : action.payload.list\n                    }\n                }\n            }\n        }\n        default:\n            return state;\n    }\n};","import { TOGGLE_SEARCH, TOGGLE_MENU } from './types';\n\nconst initialState = {\n    showSearch: false,\n    showMenu: false\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_SEARCH: {\n            return {\n                ...state,\n                showSearch: action.payload === null ? !state.showSearch : action.payload\n            }\n        }\n        case TOGGLE_MENU: {\n            return {\n                ...state,\n                showMenu: action.payload === null ? !state.showMenu : action.payload\n            }\n        }\n        default:\n            return state;\n    }\n};","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport config from './config/reducer';\nimport movies from './movies/reducer';\nimport ui from './ui/reducer';\n\nconst makeStore = () => createStore(\n    combineReducers({\n        config,\n        movies,\n        ui\n    }),\n    compose(\n        applyMiddleware(thunk),\n        typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f, // eslint-disable-line no-underscore-dangle\n    ),\n);\n\nexport default makeStore;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from \"react-router-dom\";\nimport App from 'components/App';\nimport makeStore from './stores'\nimport * as serviceWorker from './serviceWorker';\n\naxios.defaults.baseURL = process.env.REACT_APP_TMDB_API_BASE_URL;\n\n// Check if key is defined, if not assume a proxy is being used\nif(process.env.REACT_APP_TMDB_API_KEY){\n    axios.defaults.params = {}\n    axios.defaults.params['api_key'] = process.env.REACT_APP_TMDB_API_KEY;\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={makeStore()}>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}